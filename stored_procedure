CREATE DEFINER=`helly`@`localhost` PROCEDURE `chartData`(IN companyID INT)
BEGIN
    
    SELECT count(*) INTO @companyActive FROM company WHERE company.is_active = 1;
	SELECT count(*) INTO @companyInactive FROM company WHERE company.is_active = 0;
    
    -- Yearly Revenue
    SELECT SUM(amount) AS Amount, YEAR(created_at) AS Year FROM transaction GROUP BY YEAR ORDER BY YEAR DESC LIMIT 3;
    
    -- Monthly Revenue
    SELECT SUM(amount) AS Amount FROM transaction WHERE YEAR(created_at) = YEAR(current_timestamp()) AND MONTH(created_at) = MONTH(current_timestamp());
    
    -- Top Company Client
    SELECT
		c.id,
		c.name,
        c.established_at,
		COUNT(u.id) AS UserCount,
		t.Amount
	FROM company c
	INNER JOIN user u ON c.id = u.company_id
	INNER JOIN (
		SELECT company_id, SUM(amount) AS Amount
		FROM transaction
		GROUP BY company_id
	) t ON c.id = t.company_id
	GROUP BY c.id ORDER BY Amount DESC, UserCount DESC LIMIT 4;
    
    -- Revenue
    
    SET @query1 = CONCAT('SELECT count(*) INTO @cntBda FROM user WHERE user.roles->"$[0]" = "ROLE_BDA"');
	SET @query2 = CONCAT('SELECT count(*) INTO @cntAdmin FROM user WHERE user.roles->"$[0]" = "ROLE_ADMIN"');
	SET @query3 = CONCAT('SELECT count(*) INTO @total FROM user');
    SET @growthQuery = CONCAT('SELECT count(*) as Count, YEAR(created_at) as Year FROM company GROUP BY year(created_at) ORDER BY Year ASC;');
    SET @subscriptionQuery = CONCAT('SELECT count(*) as Count, s.type FROM subscription_duration sd INNER JOIN subscription s ON sd.subscription_id_id = s.id GROUP BY s.id;');
    
    IF companyID != -1 THEN
			SET @query1 = CONCAT(@query1, ' AND user.company_id = ', companyID, ';');
			SET @query2 = CONCAT(@query2, ' AND user.company_id = ', companyID, ';');
			SET @query3 = CONCAT(@query3, ' WHERE user.company_id = ', companyID, ';');
            SET @growthQuery = CONCAT('SELECT count(*) as Count, YEAR(created_at) as Year FROM company WHERE user.company_id = ', companyID, ' GROUP BY year(created_at) ORDER BY Year ASC');
	END IF;
    
    PREPARE STMT1 FROM @query1;
    PREPARE STMT2 FROM @query2;
    PREPARE STMT3 FROM @query3;
    PREPARE STMT4 FROM @growthQuery;
    PREPARE STMT5 FROM @subscriptionQuery;
    
	EXECUTE STMT1;
    EXECUTE STMT2;
    EXECUTE STMT3;
    EXECUTE STMT4;
    EXECUTE STMT5;
    
    SELECT @companyActive, @companyInactive, @cntAdmin, @cntBda, @total;
END